; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152d-eval\stm32l152d_eval.o --asm_dir=.\STM32L152D-EVAL\ --list_dir=.\STM32L152D-EVAL\ --depend=.\stm32l152d-eval\stm32l152d_eval.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152D_EVAL -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32L1xx -D__MICROLIB -DSTM32L1XX_HD -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_HD -DUSE_STM32L152D_EVAL ..\..\..\Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval.c]
                          THUMB

                          AREA ||i.LM75_LowLevel_DeInit||, CODE, READONLY, ALIGN=2

                  LM75_LowLevel_DeInit PROC
;;;538      */
;;;539    void LM75_LowLevel_DeInit(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;540    {
;;;541      GPIO_InitTypeDef  GPIO_InitStructure;
;;;542    
;;;543      /*!< Disable LM75_I2C */
;;;544      I2C_Cmd(LM75_I2C, DISABLE);
000002  4c13              LDR      r4,|L1.80|
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       I2C_Cmd
;;;545      
;;;546      /*!< DeInitializes the LM75_I2C */
;;;547      I2C_DeInit(LM75_I2C);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       I2C_DeInit
;;;548      
;;;549      /*!< LM75_I2C Periph clock disable */
;;;550      RCC_APB1PeriphClockCmd(LM75_I2C_CLK, DISABLE);
000012  2100              MOVS     r1,#0
000014  f44f1000          MOV      r0,#0x200000
000018  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;551        
;;;552      /*!< Configure LM75_I2C pins: SCL */
;;;553      GPIO_InitStructure.GPIO_Pin = LM75_I2C_SCL_PIN;
00001c  15a0              ASRS     r0,r4,#22
;;;554      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00001e  9000              STR      r0,[sp,#0]
000020  2000              MOVS     r0,#0
000022  f88d0004          STRB     r0,[sp,#4]
;;;555      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;556      GPIO_Init(LM75_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
000026  4c0b              LDR      r4,|L1.84|
000028  f88d0007          STRB     r0,[sp,#7]            ;555
00002c  4669              MOV      r1,sp
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       GPIO_Init
;;;557    
;;;558      /*!< Configure LM75_I2C pins: SDA */
;;;559      GPIO_InitStructure.GPIO_Pin = LM75_I2C_SDA_PIN;
000034  1560              ASRS     r0,r4,#21
;;;560      GPIO_Init(LM75_I2C_SDA_GPIO_PORT, &GPIO_InitStructure);
000036  9000              STR      r0,[sp,#0]
000038  4669              MOV      r1,sp
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       GPIO_Init
;;;561    
;;;562      /*!< Configure LM75_I2C pin: SMBUS ALERT */
;;;563      GPIO_InitStructure.GPIO_Pin = LM75_I2C_SMBUSALERT_PIN;
000040  2020              MOVS     r0,#0x20
;;;564      GPIO_Init(LM75_I2C_SMBUSALERT_GPIO_PORT, &GPIO_InitStructure);
000042  9000              STR      r0,[sp,#0]
000044  4669              MOV      r1,sp
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       GPIO_Init
;;;565    }
00004c  bd1c              POP      {r2-r4,pc}
;;;566    
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      0x40005400
                  |L1.84|
                          DCD      0x40020400

                          AREA ||i.LM75_LowLevel_Init||, CODE, READONLY, ALIGN=2

                  LM75_LowLevel_Init PROC
;;;571      */
;;;572    void LM75_LowLevel_Init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;573    {
;;;574      GPIO_InitTypeDef  GPIO_InitStructure;
;;;575    
;;;576      /*!< LM75_I2C Periph clock enable */
;;;577      RCC_APB1PeriphClockCmd(LM75_I2C_CLK, ENABLE);
000002  2101              MOVS     r1,#1
000004  0548              LSLS     r0,r1,#21
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;578        
;;;579      /*!< LM75_I2C_SCL_GPIO_CLK, LM75_I2C_SDA_GPIO_CLK 
;;;580           and LM75_I2C_SMBUSALERT_GPIO_CLK Periph clock enable */
;;;581      RCC_AHBPeriphClockCmd(LM75_I2C_SCL_GPIO_CLK | LM75_I2C_SDA_GPIO_CLK |
00000a  2101              MOVS     r1,#1
00000c  2002              MOVS     r0,#2
00000e  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;582                            LM75_I2C_SMBUSALERT_GPIO_CLK, ENABLE);
;;;583       
;;;584      /* Connect PXx to I2C_SCL */
;;;585      GPIO_PinAFConfig(LM75_I2C_SCL_GPIO_PORT, LM75_I2C_SCL_SOURCE, LM75_I2C_SCL_AF);
000012  4c17              LDR      r4,|L2.112|
000014  2204              MOVS     r2,#4
000016  2108              MOVS     r1,#8
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       GPIO_PinAFConfig
;;;586    
;;;587      /* Connect PXx to I2C_SDA */
;;;588      GPIO_PinAFConfig(LM75_I2C_SDA_GPIO_PORT, LM75_I2C_SDA_SOURCE, LM75_I2C_SDA_AF); 
00001e  2204              MOVS     r2,#4
000020  2109              MOVS     r1,#9
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       GPIO_PinAFConfig
;;;589    
;;;590      /* Connect PXx to I2C_SMBUSALER */
;;;591      GPIO_PinAFConfig(LM75_I2C_SMBUSALERT_GPIO_PORT, LM75_I2C_SMBUSALERT_SOURCE, LM75_I2C_SMBUSALERT_AF); 
000028  2204              MOVS     r2,#4
00002a  2105              MOVS     r1,#5
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       GPIO_PinAFConfig
;;;592      
;;;593      /*!< Configure LM75_I2C pins: SCL */
;;;594      GPIO_InitStructure.GPIO_Pin = LM75_I2C_SCL_PIN;
000032  15a0              ASRS     r0,r4,#22
;;;595      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000034  9000              STR      r0,[sp,#0]
000036  2002              MOVS     r0,#2
000038  f88d0004          STRB     r0,[sp,#4]
;;;596      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
00003c  2003              MOVS     r0,#3
00003e  f88d0005          STRB     r0,[sp,#5]
;;;597      GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000042  2001              MOVS     r0,#1
000044  f88d0006          STRB     r0,[sp,#6]
;;;598      GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
000048  2000              MOVS     r0,#0
00004a  f88d0007          STRB     r0,[sp,#7]
;;;599      GPIO_Init(LM75_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
00004e  4669              MOV      r1,sp
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       GPIO_Init
;;;600    
;;;601      /*!< Configure LM75_I2C pins: SDA */
;;;602      GPIO_InitStructure.GPIO_Pin = LM75_I2C_SDA_PIN;
000056  1560              ASRS     r0,r4,#21
;;;603      GPIO_Init(LM75_I2C_SDA_GPIO_PORT, &GPIO_InitStructure);
000058  9000              STR      r0,[sp,#0]
00005a  4669              MOV      r1,sp
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       GPIO_Init
;;;604    
;;;605      /*!< Configure LM75_I2C pin: SMBUS ALERT */
;;;606      GPIO_InitStructure.GPIO_Pin = LM75_I2C_SMBUSALERT_PIN;
000062  2020              MOVS     r0,#0x20
;;;607      GPIO_Init(LM75_I2C_SMBUSALERT_GPIO_PORT, &GPIO_InitStructure);
000064  9000              STR      r0,[sp,#0]
000066  4669              MOV      r1,sp
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       GPIO_Init
;;;608    }
00006e  bd1c              POP      {r2-r4,pc}
;;;609    
                          ENDP

                  |L2.112|
                          DCD      0x40020400

                          AREA ||i.SD_LowLevel_DMA_RxConfig||, CODE, READONLY, ALIGN=2

                  SD_LowLevel_DMA_RxConfig PROC
;;;506      */
;;;507    void SD_LowLevel_DMA_RxConfig(uint32_t *BufferDST, uint32_t BufferSize)
000000  b570              PUSH     {r4-r6,lr}
;;;508    {
000002  4605              MOV      r5,r0
000004  b08c              SUB      sp,sp,#0x30
000006  460c              MOV      r4,r1
;;;509      DMA_InitTypeDef DMA_InitStructure;
;;;510    
;;;511      DMA_ClearFlag(SD_SDIO_DMA_FLAG_TC | SD_SDIO_DMA_FLAG_TE | SD_SDIO_DMA_FLAG_HT | SD_SDIO_DMA_FLAG_GL);
000008  4814              LDR      r0,|L3.92|
00000a  f7fffffe          BL       DMA_ClearFlag
;;;512    
;;;513      /*!< SDIO DMA CHANNEL disable */
;;;514      DMA_Cmd(SD_SDIO_DMA_CHANNEL, DISABLE);
00000e  4e14              LDR      r6,|L3.96|
000010  2100              MOVS     r1,#0
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       DMA_Cmd
;;;515    
;;;516      /*!< SDIO DMA CHANNEL Config */
;;;517      DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
000018  4812              LDR      r0,|L3.100|
00001a  e9cd0500          STRD     r0,r5,[sp,#0]
;;;518      DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)BufferDST;
;;;519      DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
00001e  2000              MOVS     r0,#0
;;;520      DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
000020  08a1              LSRS     r1,r4,#2
000022  e9cd0102          STRD     r0,r1,[sp,#8]
;;;521      DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
;;;522      DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
000026  2180              MOVS     r1,#0x80
000028  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;523      DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
00002c  0089              LSLS     r1,r1,#2
;;;524      DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
00002e  9106              STR      r1,[sp,#0x18]
000030  0089              LSLS     r1,r1,#2
000032  e9cd1007          STRD     r1,r0,[sp,#0x1c]
;;;525      DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
;;;526      DMA_InitStructure.DMA_Priority = DMA_Priority_High;
000036  0089              LSLS     r1,r1,#2
000038  e9cd1009          STRD     r1,r0,[sp,#0x24]
;;;527      DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
;;;528      DMA_Init(SD_SDIO_DMA_CHANNEL, &DMA_InitStructure);
00003c  4669              MOV      r1,sp
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       DMA_Init
;;;529      DMA_ITConfig(SD_SDIO_DMA_CHANNEL, DMA_IT_TC, ENABLE);
000044  2201              MOVS     r2,#1
000046  2102              MOVS     r1,#2
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       DMA_ITConfig
;;;530      /*!< SDIO DMA CHANNEL enable */
;;;531      DMA_Cmd(SD_SDIO_DMA_CHANNEL, ENABLE); 
00004e  2101              MOVS     r1,#1
000050  4630              MOV      r0,r6
000052  f7fffffe          BL       DMA_Cmd
;;;532    }
000056  b00c              ADD      sp,sp,#0x30
000058  bd70              POP      {r4-r6,pc}
;;;533    
                          ENDP

00005a  0000              DCW      0x0000
                  |L3.92|
                          DCD      0x1000f000
                  |L3.96|
                          DCD      0x40026444
                  |L3.100|
                          DCD      0x40012c80

                          AREA ||i.SD_LowLevel_DMA_TxConfig||, CODE, READONLY, ALIGN=2

                  SD_LowLevel_DMA_TxConfig PROC
;;;473      */
;;;474    void SD_LowLevel_DMA_TxConfig(uint32_t *BufferSRC, uint32_t BufferSize)
000000  b570              PUSH     {r4-r6,lr}
;;;475    {
000002  4605              MOV      r5,r0
000004  b08c              SUB      sp,sp,#0x30
000006  460c              MOV      r4,r1
;;;476      DMA_InitTypeDef DMA_InitStructure;
;;;477    
;;;478      DMA_ClearFlag(SD_SDIO_DMA_FLAG_TC | SD_SDIO_DMA_FLAG_TE | SD_SDIO_DMA_FLAG_HT | SD_SDIO_DMA_FLAG_GL);
000008  4814              LDR      r0,|L4.92|
00000a  f7fffffe          BL       DMA_ClearFlag
;;;479    
;;;480      /*!< SDIO DMA CHANNEL disable */
;;;481      DMA_Cmd(SD_SDIO_DMA_CHANNEL, DISABLE);
00000e  4e14              LDR      r6,|L4.96|
000010  2100              MOVS     r1,#0
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       DMA_Cmd
;;;482    
;;;483      /*!< SDIO DMA CHANNEL Config */
;;;484      DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
000018  4812              LDR      r0,|L4.100|
00001a  e9cd0500          STRD     r0,r5,[sp,#0]
;;;485      DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)BufferSRC;
;;;486      DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
00001e  2010              MOVS     r0,#0x10
;;;487      DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
000020  9002              STR      r0,[sp,#8]
000022  08a0              LSRS     r0,r4,#2
;;;488      DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
000024  9003              STR      r0,[sp,#0xc]
000026  2000              MOVS     r0,#0
;;;489      DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
000028  2180              MOVS     r1,#0x80
00002a  e9cd0104          STRD     r0,r1,[sp,#0x10]
;;;490      DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
00002e  0089              LSLS     r1,r1,#2
;;;491      DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
000030  9106              STR      r1,[sp,#0x18]
000032  0089              LSLS     r1,r1,#2
000034  e9cd1007          STRD     r1,r0,[sp,#0x1c]
;;;492      DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
;;;493      DMA_InitStructure.DMA_Priority = DMA_Priority_High;
000038  0089              LSLS     r1,r1,#2
00003a  e9cd1009          STRD     r1,r0,[sp,#0x24]
;;;494      DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
;;;495      DMA_Init(SD_SDIO_DMA_CHANNEL, &DMA_InitStructure);
00003e  4669              MOV      r1,sp
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       DMA_Init
;;;496      DMA_ITConfig(SD_SDIO_DMA_CHANNEL, DMA_IT_TC, ENABLE);
000046  2201              MOVS     r2,#1
000048  2102              MOVS     r1,#2
00004a  4630              MOV      r0,r6
00004c  f7fffffe          BL       DMA_ITConfig
;;;497      /*!< SDIO DMA CHANNEL enable */
;;;498      DMA_Cmd(SD_SDIO_DMA_CHANNEL, ENABLE);  
000050  2101              MOVS     r1,#1
000052  4630              MOV      r0,r6
000054  f7fffffe          BL       DMA_Cmd
;;;499    }
000058  b00c              ADD      sp,sp,#0x30
00005a  bd70              POP      {r4-r6,pc}
;;;500    
                          ENDP

                  |L4.92|
                          DCD      0x1000f000
                  |L4.96|
                          DCD      0x40026444
                  |L4.100|
                          DCD      0x40012c80

                          AREA ||i.SD_LowLevel_DeInit||, CODE, READONLY, ALIGN=2

                  SD_LowLevel_DeInit PROC
;;;379      */
;;;380    void SD_LowLevel_DeInit(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;381    {
;;;382      GPIO_InitTypeDef  GPIO_InitStructure;
;;;383      
;;;384      /*!< Disable SDIO Clock */
;;;385      SDIO_ClockCmd(DISABLE);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       SDIO_ClockCmd
;;;386      
;;;387      /*!< Set Power State to OFF */
;;;388      SDIO_SetPowerState(SDIO_PowerState_OFF);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       SDIO_SetPowerState
;;;389    
;;;390      /*!< DeInitializes the SDIO peripheral */
;;;391      SDIO_DeInit();
00000e  f7fffffe          BL       SDIO_DeInit
;;;392      
;;;393      /* Disable the SDIO APB2 Clock */
;;;394      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, DISABLE);
000012  2100              MOVS     r1,#0
000014  f44f6000          MOV      r0,#0x800
000018  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;395    
;;;396      GPIO_PinAFConfig(GPIOC, GPIO_PinSource8, GPIO_AF_MCO);
00001c  4c1c              LDR      r4,|L5.144|
00001e  2200              MOVS     r2,#0
000020  2108              MOVS     r1,#8
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       GPIO_PinAFConfig
;;;397      GPIO_PinAFConfig(GPIOC, GPIO_PinSource9, GPIO_AF_MCO);
000028  2200              MOVS     r2,#0
00002a  2109              MOVS     r1,#9
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       GPIO_PinAFConfig
;;;398      GPIO_PinAFConfig(GPIOC, GPIO_PinSource10, GPIO_AF_MCO);
000032  2200              MOVS     r2,#0
000034  210a              MOVS     r1,#0xa
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       GPIO_PinAFConfig
;;;399      GPIO_PinAFConfig(GPIOC, GPIO_PinSource11, GPIO_AF_MCO);
00003c  2200              MOVS     r2,#0
00003e  210b              MOVS     r1,#0xb
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       GPIO_PinAFConfig
;;;400      GPIO_PinAFConfig(GPIOC, GPIO_PinSource12, GPIO_AF_MCO);
000046  2200              MOVS     r2,#0
000048  210c              MOVS     r1,#0xc
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       GPIO_PinAFConfig
;;;401      GPIO_PinAFConfig(GPIOD, GPIO_PinSource2, GPIO_AF_MCO);
000050  4d10              LDR      r5,|L5.148|
000052  2200              MOVS     r2,#0
000054  2102              MOVS     r1,#2
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       GPIO_PinAFConfig
;;;402    
;;;403      /* Configure PC.08, PC.09, PC.10, PC.11 pins: D0, D1, D2, D3 pins */
;;;404      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
;;;405      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00005c  2100              MOVS     r1,#0
00005e  f44f6070          MOV      r0,#0xf00             ;404
000062  f88d1004          STRB     r1,[sp,#4]
000066  9000              STR      r0,[sp,#0]
;;;406      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000068  f88d1007          STRB     r1,[sp,#7]
;;;407      GPIO_Init(GPIOC, &GPIO_InitStructure);
00006c  4669              MOV      r1,sp
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       GPIO_Init
;;;408    
;;;409      /* Configure PD.02 CMD line */
;;;410      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000074  2004              MOVS     r0,#4
;;;411      GPIO_Init(GPIOD, &GPIO_InitStructure);
000076  9000              STR      r0,[sp,#0]
000078  4669              MOV      r1,sp
00007a  4628              MOV      r0,r5
00007c  f7fffffe          BL       GPIO_Init
;;;412    
;;;413      /* Configure PC.12 pin: CLK pin */
;;;414      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
000080  14a0              ASRS     r0,r4,#18
;;;415      GPIO_Init(GPIOC, &GPIO_InitStructure);
000082  9000              STR      r0,[sp,#0]
000084  4669              MOV      r1,sp
000086  4620              MOV      r0,r4
000088  f7fffffe          BL       GPIO_Init
;;;416    }
00008c  bd7c              POP      {r2-r6,pc}
;;;417    
                          ENDP

00008e  0000              DCW      0x0000
                  |L5.144|
                          DCD      0x40020800
                  |L5.148|
                          DCD      0x40020c00

                          AREA ||i.SD_LowLevel_Init||, CODE, READONLY, ALIGN=2

                  SD_LowLevel_Init PROC
;;;423      */
;;;424    void SD_LowLevel_Init(void)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;425    {
;;;426      GPIO_InitTypeDef  GPIO_InitStructure;
;;;427    
;;;428      /* GPIOC and GPIOD Periph clock enable */
;;;429      RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC | RCC_AHBPeriph_GPIOD | SD_DETECT_GPIO_CLK, ENABLE);
000004  2101              MOVS     r1,#1
000006  200c              MOVS     r0,#0xc
000008  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;430    
;;;431      GPIO_PinAFConfig(GPIOC, GPIO_PinSource8, GPIO_AF_SDIO);
00000c  4e2a              LDR      r6,|L6.184|
00000e  220c              MOVS     r2,#0xc
000010  2108              MOVS     r1,#8
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       GPIO_PinAFConfig
;;;432      GPIO_PinAFConfig(GPIOC, GPIO_PinSource9, GPIO_AF_SDIO);
000018  220c              MOVS     r2,#0xc
00001a  2109              MOVS     r1,#9
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       GPIO_PinAFConfig
;;;433      GPIO_PinAFConfig(GPIOC, GPIO_PinSource10, GPIO_AF_SDIO);
000022  220c              MOVS     r2,#0xc
000024  210a              MOVS     r1,#0xa
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       GPIO_PinAFConfig
;;;434      GPIO_PinAFConfig(GPIOC, GPIO_PinSource11, GPIO_AF_SDIO);
00002c  220c              MOVS     r2,#0xc
00002e  210b              MOVS     r1,#0xb
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       GPIO_PinAFConfig
;;;435      GPIO_PinAFConfig(GPIOC, GPIO_PinSource12, GPIO_AF_SDIO);
000036  220c              MOVS     r2,#0xc
000038  4611              MOV      r1,r2
00003a  4630              MOV      r0,r6
00003c  f7fffffe          BL       GPIO_PinAFConfig
;;;436      GPIO_PinAFConfig(GPIOD, GPIO_PinSource2, GPIO_AF_SDIO);
000040  4f1e              LDR      r7,|L6.188|
000042  220c              MOVS     r2,#0xc
000044  2102              MOVS     r1,#2
000046  4638              MOV      r0,r7
000048  f7fffffe          BL       GPIO_PinAFConfig
;;;437    
;;;438      /* Configure PC.08, PC.09, PC.10, PC.11 pins: D0, D1, D2, D3 pins */
;;;439      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
00004c  f44f6070          MOV      r0,#0xf00
;;;440      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
000050  9000              STR      r0,[sp,#0]
000052  2003              MOVS     r0,#3
000054  f88d0005          STRB     r0,[sp,#5]
;;;441      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000058  2002              MOVS     r0,#2
00005a  f88d0004          STRB     r0,[sp,#4]
;;;442      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00005e  2400              MOVS     r4,#0
000060  f88d4006          STRB     r4,[sp,#6]
;;;443      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000064  2501              MOVS     r5,#1
000066  f88d5007          STRB     r5,[sp,#7]
;;;444      GPIO_Init(GPIOC, &GPIO_InitStructure);
00006a  4669              MOV      r1,sp
00006c  4630              MOV      r0,r6
00006e  f7fffffe          BL       GPIO_Init
;;;445    
;;;446      /* Configure PD.02 CMD line */
;;;447      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000072  2004              MOVS     r0,#4
;;;448      GPIO_Init(GPIOD, &GPIO_InitStructure);
000074  9000              STR      r0,[sp,#0]
000076  4669              MOV      r1,sp
000078  4638              MOV      r0,r7
00007a  f7fffffe          BL       GPIO_Init
;;;449    
;;;450      /* Configure PC.12 pin: CLK pin */
;;;451      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
00007e  0328              LSLS     r0,r5,#12
;;;452      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000080  9000              STR      r0,[sp,#0]
000082  f88d4007          STRB     r4,[sp,#7]
;;;453      GPIO_Init(GPIOC, &GPIO_InitStructure);
000086  4669              MOV      r1,sp
000088  4630              MOV      r0,r6
00008a  f7fffffe          BL       GPIO_Init
;;;454      
;;;455      /*!< Configure SD_SPI_DETECT_PIN pin: SD Card detect pin */
;;;456      GPIO_InitStructure.GPIO_Pin = SD_DETECT_PIN;
00008e  2080              MOVS     r0,#0x80
;;;457      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
000090  9000              STR      r0,[sp,#0]
000092  f88d4004          STRB     r4,[sp,#4]
;;;458      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000096  f88d5007          STRB     r5,[sp,#7]
;;;459      GPIO_Init(SD_DETECT_GPIO_PORT, &GPIO_InitStructure);
00009a  4669              MOV      r1,sp
00009c  4630              MOV      r0,r6
00009e  f7fffffe          BL       GPIO_Init
;;;460    
;;;461      /* Enable the SDIO APB2 Clock */
;;;462      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE);
0000a2  2101              MOVS     r1,#1
0000a4  02c8              LSLS     r0,r1,#11
0000a6  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;463    
;;;464      /* Enable the DMA2 Clock */
;;;465      RCC_AHBPeriphClockCmd(SD_SDIO_DMA_CLK, ENABLE);
0000aa  2101              MOVS     r1,#1
0000ac  0648              LSLS     r0,r1,#25
0000ae  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;466    }
0000b2  e8bd81fc          POP      {r2-r8,pc}
;;;467    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L6.184|
                          DCD      0x40020800
                  |L6.188|
                          DCD      0x40020c00

                          AREA ||i.STM_EVAL_COMInit||, CODE, READONLY, ALIGN=2

                  STM_EVAL_COMInit PROC
;;;339      */
;;;340    void STM_EVAL_COMInit(COM_TypeDef COM, USART_InitTypeDef* USART_InitStruct)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;341    {
000004  460f              MOV      r7,r1
000006  4604              MOV      r4,r0
;;;342      GPIO_InitTypeDef GPIO_InitStructure;
;;;343    
;;;344      /* Enable GPIO clock */
;;;345      RCC_AHBPeriphClockCmd(COM_TX_PORT_CLK[COM] | COM_RX_PORT_CLK[COM], ENABLE);
000008  4929              LDR      r1,|L7.176|
00000a  4829              LDR      r0,|L7.176|
00000c  1d09              ADDS     r1,r1,#4
00000e  f8500024          LDR      r0,[r0,r4,LSL #2]
000012  f8511024          LDR      r1,[r1,r4,LSL #2]
000016  4308              ORRS     r0,r0,r1
000018  2101              MOVS     r1,#1
00001a  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;346    
;;;347      /* Enable USART1 clock */
;;;348      RCC_APB2PeriphClockCmd(COM_USART_CLK[COM], ENABLE); 
00001e  4824              LDR      r0,|L7.176|
000020  2101              MOVS     r1,#1
000022  1f00              SUBS     r0,r0,#4
000024  f8500024          LDR      r0,[r0,r4,LSL #2]
000028  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;349    
;;;350      /* Connect PXx to USARTx_Tx */
;;;351      GPIO_PinAFConfig(COM_TX_PORT[COM], COM_TX_PIN_SOURCE[COM], COM_TX_AF[COM]);
00002c  4820              LDR      r0,|L7.176|
00002e  4d21              LDR      r5,|L7.180|
000030  380a              SUBS     r0,r0,#0xa
000032  5d02              LDRB     r2,[r0,r4]
000034  1e80              SUBS     r0,r0,#2
000036  5d01              LDRB     r1,[r0,r4]
000038  f8550024          LDR      r0,[r5,r4,LSL #2]
00003c  f7fffffe          BL       GPIO_PinAFConfig
;;;352    
;;;353      /* Connect PXx to USARTx_Rx */
;;;354      GPIO_PinAFConfig(COM_RX_PORT[COM], COM_RX_PIN_SOURCE[COM], COM_RX_AF[COM]);
000040  481b              LDR      r0,|L7.176|
000042  1d2e              ADDS     r6,r5,#4
000044  3809              SUBS     r0,r0,#9
000046  5d02              LDRB     r2,[r0,r4]
000048  1e80              SUBS     r0,r0,#2
00004a  5d01              LDRB     r1,[r0,r4]
00004c  f8560024          LDR      r0,[r6,r4,LSL #2]
000050  f7fffffe          BL       GPIO_PinAFConfig
;;;355      
;;;356      /* Configure USART Tx as alternate function push-pull */
;;;357      GPIO_InitStructure.GPIO_Pin = COM_TX_PIN[COM];
000054  4816              LDR      r0,|L7.176|
;;;358      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
;;;359      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
;;;360      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;361      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
;;;362      GPIO_Init(COM_TX_PORT[COM], &GPIO_InitStructure);
000056  4669              MOV      r1,sp
000058  3808              SUBS     r0,r0,#8              ;357
00005a  f8300014          LDRH     r0,[r0,r4,LSL #1]     ;357
00005e  9000              STR      r0,[sp,#0]            ;358
000060  2002              MOVS     r0,#2                 ;358
000062  f88d0004          STRB     r0,[sp,#4]            ;358
000066  2003              MOVS     r0,#3                 ;359
000068  f88d0005          STRB     r0,[sp,#5]            ;359
00006c  2000              MOVS     r0,#0                 ;360
00006e  f88d0006          STRB     r0,[sp,#6]            ;360
000072  2001              MOVS     r0,#1                 ;361
000074  f88d0007          STRB     r0,[sp,#7]            ;361
000078  f8550024          LDR      r0,[r5,r4,LSL #2]
00007c  f7fffffe          BL       GPIO_Init
;;;363        
;;;364      /* Configure USART Rx as alternate function push-pull */
;;;365      GPIO_InitStructure.GPIO_Pin = COM_RX_PIN[COM];
000080  480b              LDR      r0,|L7.176|
;;;366      GPIO_Init(COM_RX_PORT[COM], &GPIO_InitStructure);
000082  4669              MOV      r1,sp
000084  1f80              SUBS     r0,r0,#6              ;365
000086  f8300014          LDRH     r0,[r0,r4,LSL #1]     ;365
00008a  9000              STR      r0,[sp,#0]
00008c  f8560024          LDR      r0,[r6,r4,LSL #2]
000090  f7fffffe          BL       GPIO_Init
;;;367    
;;;368      /* USART configuration */
;;;369      USART_Init(COM_USART[COM], USART_InitStruct);
000094  1f2d              SUBS     r5,r5,#4
000096  4639              MOV      r1,r7
000098  f8550024          LDR      r0,[r5,r4,LSL #2]
00009c  f7fffffe          BL       USART_Init
;;;370        
;;;371      /* Enable USART */
;;;372      USART_Cmd(COM_USART[COM], ENABLE);
0000a0  f8550024          LDR      r0,[r5,r4,LSL #2]
0000a4  2101              MOVS     r1,#1
0000a6  f7fffffe          BL       USART_Cmd
;;;373    }
0000aa  e8bd81fc          POP      {r2-r8,pc}
;;;374    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L7.176|
                          DCD      ||.constdata||+0xc
                  |L7.180|
                          DCD      ||.data||+0x4

                          AREA ||i.STM_EVAL_LEDInit||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDInit PROC
;;;183      */
;;;184    void STM_EVAL_LEDInit(Led_TypeDef Led)
000000  b57c              PUSH     {r2-r6,lr}
;;;185    {
000002  4604              MOV      r4,r0
;;;186      GPIO_InitTypeDef  GPIO_InitStructure;
;;;187      
;;;188      /* Enable the GPIO_LED Clock */
;;;189      RCC_AHBPeriphClockCmd(GPIO_CLK[Led], ENABLE);
000004  4810              LDR      r0,|L8.72|
000006  2101              MOVS     r1,#1
000008  f8500024          LDR      r0,[r0,r4,LSL #2]
00000c  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;190    
;;;191      /* Configure the GPIO_LED pin */
;;;192      GPIO_InitStructure.GPIO_Pin = GPIO_PIN[Led];
000010  4d0d              LDR      r5,|L8.72|
;;;193      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
;;;194      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;195      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;196      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
;;;197      GPIO_Init(GPIO_PORT[Led], &GPIO_InitStructure);
000012  4e0e              LDR      r6,|L8.76|
000014  3d0a              SUBS     r5,r5,#0xa            ;192
000016  4669              MOV      r1,sp
000018  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;192
00001c  9000              STR      r0,[sp,#0]            ;193
00001e  2001              MOVS     r0,#1                 ;193
000020  f88d0004          STRB     r0,[sp,#4]            ;193
000024  2000              MOVS     r0,#0                 ;194
000026  f88d0006          STRB     r0,[sp,#6]            ;194
00002a  f88d0007          STRB     r0,[sp,#7]            ;195
00002e  2003              MOVS     r0,#3                 ;196
000030  f88d0005          STRB     r0,[sp,#5]            ;196
000034  f8560024          LDR      r0,[r6,r4,LSL #2]
000038  f7fffffe          BL       GPIO_Init
;;;198      GPIO_PORT[Led]->BSRRL = GPIO_PIN[Led];
00003c  f8561024          LDR      r1,[r6,r4,LSL #2]
000040  f8350014          LDRH     r0,[r5,r4,LSL #1]
000044  8308              STRH     r0,[r1,#0x18]
;;;199    }
000046  bd7c              POP      {r2-r6,pc}
;;;200    
                          ENDP

                  |L8.72|
                          DCD      ||.constdata||+0x30
                  |L8.76|
                          DCD      ||.data||+0xc

                          AREA ||i.STM_EVAL_LEDOff||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDOff PROC
;;;225      */
;;;226    void STM_EVAL_LEDOff(Led_TypeDef Led)
000000  4903              LDR      r1,|L9.16|
;;;227    {
;;;228      GPIO_PORT[Led]->BSRRL = GPIO_PIN[Led];
000002  4a04              LDR      r2,|L9.20|
000004  f8311010          LDRH     r1,[r1,r0,LSL #1]
000008  f8520020          LDR      r0,[r2,r0,LSL #2]
00000c  8301              STRH     r1,[r0,#0x18]
;;;229    }
00000e  4770              BX       lr
;;;230    
                          ENDP

                  |L9.16|
                          DCD      ||.constdata||+0x26
                  |L9.20|
                          DCD      ||.data||+0xc

                          AREA ||i.STM_EVAL_LEDOn||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDOn PROC
;;;210      */
;;;211    void STM_EVAL_LEDOn(Led_TypeDef Led)
000000  4903              LDR      r1,|L10.16|
;;;212    {
;;;213      GPIO_PORT[Led]->BSRRH = GPIO_PIN[Led];
000002  4a04              LDR      r2,|L10.20|
000004  f8311010          LDRH     r1,[r1,r0,LSL #1]
000008  f8520020          LDR      r0,[r2,r0,LSL #2]
00000c  8341              STRH     r1,[r0,#0x1a]
;;;214    }
00000e  4770              BX       lr
;;;215    
                          ENDP

                  |L10.16|
                          DCD      ||.constdata||+0x26
                  |L10.20|
                          DCD      ||.data||+0xc

                          AREA ||i.STM_EVAL_LEDToggle||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDToggle PROC
;;;240      */
;;;241    void STM_EVAL_LEDToggle(Led_TypeDef Led)
000000  4904              LDR      r1,|L11.20|
;;;242    {
;;;243      GPIO_PORT[Led]->ODR ^= GPIO_PIN[Led];
000002  f8511020          LDR      r1,[r1,r0,LSL #2]
000006  8a8a              LDRH     r2,[r1,#0x14]
000008  4b03              LDR      r3,|L11.24|
00000a  f8330010          LDRH     r0,[r3,r0,LSL #1]
00000e  4042              EORS     r2,r2,r0
000010  828a              STRH     r2,[r1,#0x14]
;;;244    }
000012  4770              BX       lr
;;;245    
                          ENDP

                  |L11.20|
                          DCD      ||.data||+0xc
                  |L11.24|
                          DCD      ||.constdata||+0x26

                          AREA ||i.STM_EVAL_PBGetState||, CODE, READONLY, ALIGN=2

                  STM_EVAL_PBGetState PROC
;;;323      */
;;;324    uint32_t STM_EVAL_PBGetState(Button_TypeDef Button)
000000  4903              LDR      r1,|L12.16|
;;;325    {
;;;326      /* There is no Wakeup and Tamper pins on STM32L152D-EVAL. */
;;;327      
;;;328      return GPIO_ReadInputDataBit(BUTTON_PORT[Button], BUTTON_PIN[Button]);
000002  4a04              LDR      r2,|L12.20|
000004  f8311010          LDRH     r1,[r1,r0,LSL #1]
000008  f8520020          LDR      r0,[r2,r0,LSL #2]
00000c  f7ffbffe          B.W      GPIO_ReadInputDataBit
;;;329    }
;;;330    
                          ENDP

                  |L12.16|
                          DCD      ||.constdata||+0x40
                  |L12.20|
                          DCD      ||.data||+0x1c

                          AREA ||i.STM_EVAL_PBInit||, CODE, READONLY, ALIGN=2

                  STM_EVAL_PBInit PROC
;;;262      */
;;;263    void STM_EVAL_PBInit(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode)
000000  b570              PUSH     {r4-r6,lr}
;;;264    {
000002  4604              MOV      r4,r0
;;;265      GPIO_InitTypeDef GPIO_InitStructure;
;;;266      EXTI_InitTypeDef EXTI_InitStructure;
;;;267      NVIC_InitTypeDef NVIC_InitStructure;
;;;268    
;;;269      /* There is no Wakeup and Tamper buttons on STM32L152D-EVAL. */
;;;270        
;;;271      /* Enable the BUTTON Clock */
;;;272      RCC_AHBPeriphClockCmd(BUTTON_CLK[Button], ENABLE);
000004  4824              LDR      r0,|L13.152|
000006  460e              MOV      r6,r1                 ;264
000008  b086              SUB      sp,sp,#0x18           ;264
00000a  f8500024          LDR      r0,[r0,r4,LSL #2]
00000e  2101              MOVS     r1,#1
000010  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;273      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000014  2101              MOVS     r1,#1
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;274    
;;;275      /* Configure Button pin as input */
;;;276      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
;;;277      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;278      GPIO_InitStructure.GPIO_Pin = BUTTON_PIN[Button];
00001c  481e              LDR      r0,|L13.152|
00001e  2500              MOVS     r5,#0                 ;276
000020  f88d5010          STRB     r5,[sp,#0x10]         ;276
000024  380c              SUBS     r0,r0,#0xc
000026  f88d5013          STRB     r5,[sp,#0x13]         ;277
00002a  f8300014          LDRH     r0,[r0,r4,LSL #1]
;;;279      GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStructure);
00002e  9003              STR      r0,[sp,#0xc]
000030  481a              LDR      r0,|L13.156|
000032  a903              ADD      r1,sp,#0xc
000034  f8500024          LDR      r0,[r0,r4,LSL #2]
000038  f7fffffe          BL       GPIO_Init
;;;280    
;;;281    
;;;282      if (Button_Mode == BUTTON_MODE_EXTI)
00003c  2e01              CMP      r6,#1
00003e  d128              BNE      |L13.146|
;;;283      {
;;;284        /* Connect Button EXTI Line to Button GPIO Pin */
;;;285        SYSCFG_EXTILineConfig(BUTTON_PORT_SOURCE[Button], BUTTON_PIN_SOURCE[Button]);
000040  4815              LDR      r0,|L13.152|
000042  3832              SUBS     r0,r0,#0x32
000044  5d01              LDRB     r1,[r0,r4]
000046  1f80              SUBS     r0,r0,#6
000048  5d00              LDRB     r0,[r0,r4]
00004a  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;286    
;;;287        /* Configure Button EXTI line */
;;;288        EXTI_InitStructure.EXTI_Line = BUTTON_EXTI_LINE[Button];
00004e  4812              LDR      r0,|L13.152|
000050  3018              ADDS     r0,r0,#0x18
000052  f8300014          LDRH     r0,[r0,r4,LSL #1]
;;;289        EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
000056  9000              STR      r0,[sp,#0]
000058  f88d5004          STRB     r5,[sp,#4]
;;;290        
;;;291        if(Button != BUTTON_KEY) 
00005c  b10c              CBZ      r4,|L13.98|
;;;292        {
;;;293          EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
00005e  200c              MOVS     r0,#0xc
000060  e000              B        |L13.100|
                  |L13.98|
;;;294        }
;;;295        else
;;;296        {
;;;297          EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
000062  2008              MOVS     r0,#8
                  |L13.100|
000064  f88d0005          STRB     r0,[sp,#5]
;;;298        }
;;;299        EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000068  2501              MOVS     r5,#1
00006a  f88d5006          STRB     r5,[sp,#6]
;;;300        EXTI_Init(&EXTI_InitStructure);
00006e  4668              MOV      r0,sp
000070  f7fffffe          BL       EXTI_Init
;;;301    
;;;302        /* Enable and set Button EXTI Interrupt to the lowest priority */
;;;303        NVIC_InitStructure.NVIC_IRQChannel = BUTTON_IRQn[Button];
000074  4808              LDR      r0,|L13.152|
000076  382c              SUBS     r0,r0,#0x2c
000078  5d00              LDRB     r0,[r0,r4]
00007a  f88d0008          STRB     r0,[sp,#8]
;;;304        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
00007e  200f              MOVS     r0,#0xf
000080  f88d0009          STRB     r0,[sp,#9]
;;;305        NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
000084  f88d000a          STRB     r0,[sp,#0xa]
;;;306        NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000088  f88d500b          STRB     r5,[sp,#0xb]
;;;307    
;;;308        NVIC_Init(&NVIC_InitStructure); 
00008c  a802              ADD      r0,sp,#8
00008e  f7fffffe          BL       NVIC_Init
                  |L13.146|
;;;309      }
;;;310    }
000092  b006              ADD      sp,sp,#0x18
000094  bd70              POP      {r4-r6,pc}
;;;311    
                          ENDP

000096  0000              DCW      0x0000
                  |L13.152|
                          DCD      ||.constdata||+0x4c
                  |L13.156|
                          DCD      ||.data||+0x1c

                          AREA ||i.sEE_LowLevel_DMAConfig||, CODE, READONLY, ALIGN=2

                  sEE_LowLevel_DMAConfig PROC
;;;840      */
;;;841    void sEE_LowLevel_DMAConfig(uint32_t pBuffer, uint32_t BufferSize, uint32_t Direction)
000000  4b08              LDR      r3,|L14.36|
;;;842    { 
000002  6058              STR      r0,[r3,#4]  ; sEEDMA_InitStructure
000004  b132              CBZ      r2,|L14.20|
;;;843      /* Initialize the DMA with the new parameters */
;;;844      if (Direction == sEE_DIRECTION_TX)
;;;845      {
;;;846        /* Configure the DMA Tx Channel with the buffer address and the buffer size */
;;;847        sEEDMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)pBuffer;
;;;848        sEEDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;    
;;;849        sEEDMA_InitStructure.DMA_BufferSize = (uint32_t)BufferSize;  
;;;850        DMA_Init(sEE_I2C_DMA_CHANNEL_TX, &sEEDMA_InitStructure);  
;;;851      }
;;;852      else
;;;853      { 
;;;854        /* Configure the DMA Rx Channel with the buffer address and the buffer size */
;;;855        sEEDMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)pBuffer;
;;;856        sEEDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
000006  2000              MOVS     r0,#0
000008  e9c30102          STRD     r0,r1,[r3,#8]
;;;857        sEEDMA_InitStructure.DMA_BufferSize = (uint32_t)BufferSize;      
;;;858        DMA_Init(sEE_I2C_DMA_CHANNEL_RX, &sEEDMA_InitStructure);    
00000c  4619              MOV      r1,r3
00000e  4806              LDR      r0,|L14.40|
                  |L14.16|
000010  f7ffbffe          B.W      DMA_Init
                  |L14.20|
000014  2010              MOVS     r0,#0x10              ;848
000016  e9c30102          STRD     r0,r1,[r3,#8]         ;848
00001a  4803              LDR      r0,|L14.40|
00001c  4901              LDR      r1,|L14.36|
00001e  3814              SUBS     r0,r0,#0x14           ;850
000020  e7f6              B        |L14.16|
;;;859      }
;;;860    }
;;;861    
                          ENDP

000022  0000              DCW      0x0000
                  |L14.36|
                          DCD      ||.bss||
                  |L14.40|
                          DCD      0x40026080

                          AREA ||i.sEE_LowLevel_DeInit||, CODE, READONLY, ALIGN=2

                  sEE_LowLevel_DeInit PROC
;;;714      */
;;;715    void sEE_LowLevel_DeInit(void)
000000  b53e              PUSH     {r1-r5,lr}
;;;716    {
;;;717      GPIO_InitTypeDef  GPIO_InitStructure; 
;;;718      NVIC_InitTypeDef NVIC_InitStructure;    
;;;719       
;;;720      /* sEE_I2C Peripheral Disable */
;;;721      I2C_Cmd(sEE_I2C, DISABLE);
000002  4c23              LDR      r4,|L15.144|
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       I2C_Cmd
;;;722     
;;;723      /* sEE_I2C DeInit */
;;;724      I2C_DeInit(sEE_I2C);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       I2C_DeInit
;;;725    
;;;726      /*!< sEE_I2C Periph clock disable */
;;;727      RCC_APB1PeriphClockCmd(sEE_I2C_CLK, DISABLE);
000012  2100              MOVS     r1,#0
000014  f44f1000          MOV      r0,#0x200000
000018  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;728        
;;;729      /*!< GPIO configuration */  
;;;730      /*!< Configure sEE_I2C pins: SCL */
;;;731      GPIO_InitStructure.GPIO_Pin = sEE_I2C_SCL_PIN;
00001c  15a0              ASRS     r0,r4,#22
;;;732      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00001e  2400              MOVS     r4,#0
;;;733      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;734      GPIO_Init(sEE_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
000020  4d1c              LDR      r5,|L15.148|
000022  9001              STR      r0,[sp,#4]            ;732
000024  f88d4008          STRB     r4,[sp,#8]            ;732
000028  f88d400b          STRB     r4,[sp,#0xb]          ;733
00002c  a901              ADD      r1,sp,#4
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       GPIO_Init
;;;735    
;;;736      /*!< Configure sEE_I2C pins: SDA */
;;;737      GPIO_InitStructure.GPIO_Pin = sEE_I2C_SDA_PIN;
000034  1568              ASRS     r0,r5,#21
;;;738      GPIO_Init(sEE_I2C_SDA_GPIO_PORT, &GPIO_InitStructure);
000036  9001              STR      r0,[sp,#4]
000038  a901              ADD      r1,sp,#4
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       GPIO_Init
;;;739    
;;;740      /* Configure and enable I2C DMA TX Channel interrupt */
;;;741      NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_TX_IRQn;
000040  2010              MOVS     r0,#0x10
000042  f88d0000          STRB     r0,[sp,#0]
;;;742      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
000046  f88d4001          STRB     r4,[sp,#1]
;;;743      NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
00004a  f88d4002          STRB     r4,[sp,#2]
;;;744      NVIC_InitStructure.NVIC_IRQChannelCmd = DISABLE;
00004e  f88d4003          STRB     r4,[sp,#3]
;;;745      NVIC_Init(&NVIC_InitStructure);
000052  4668              MOV      r0,sp
000054  f7fffffe          BL       NVIC_Init
;;;746    
;;;747      /* Configure and enable I2C DMA RX Channel interrupt */
;;;748      NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_RX_IRQn;
000058  2011              MOVS     r0,#0x11
00005a  f88d0000          STRB     r0,[sp,#0]
;;;749      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
00005e  f88d4001          STRB     r4,[sp,#1]
;;;750      NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
000062  f88d4002          STRB     r4,[sp,#2]
;;;751      NVIC_Init(&NVIC_InitStructure);   
000066  4668              MOV      r0,sp
000068  f7fffffe          BL       NVIC_Init
;;;752      
;;;753      /* Disable and Deinitialize the DMA channels */
;;;754      DMA_Cmd(sEE_I2C_DMA_CHANNEL_TX, DISABLE);
00006c  4c0a              LDR      r4,|L15.152|
00006e  2100              MOVS     r1,#0
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       DMA_Cmd
;;;755      DMA_Cmd(sEE_I2C_DMA_CHANNEL_RX, DISABLE);
000076  4d08              LDR      r5,|L15.152|
000078  2100              MOVS     r1,#0
00007a  3514              ADDS     r5,r5,#0x14
00007c  4628              MOV      r0,r5
00007e  f7fffffe          BL       DMA_Cmd
;;;756      DMA_DeInit(sEE_I2C_DMA_CHANNEL_TX);
000082  4620              MOV      r0,r4
000084  f7fffffe          BL       DMA_DeInit
;;;757      DMA_DeInit(sEE_I2C_DMA_CHANNEL_RX);
000088  4628              MOV      r0,r5
00008a  f7fffffe          BL       DMA_DeInit
;;;758    }
00008e  bd3e              POP      {r1-r5,pc}
;;;759    
                          ENDP

                  |L15.144|
                          DCD      0x40005400
                  |L15.148|
                          DCD      0x40020400
                  |L15.152|
                          DCD      0x4002606c

                          AREA ||i.sEE_LowLevel_Init||, CODE, READONLY, ALIGN=2

                  sEE_LowLevel_Init PROC
;;;764      */
;;;765    void sEE_LowLevel_Init(void)
000000  b5fe              PUSH     {r1-r7,lr}
;;;766    {
;;;767      GPIO_InitTypeDef  GPIO_InitStructure;
;;;768      NVIC_InitTypeDef NVIC_InitStructure;  
;;;769      
;;;770      /*!< sEE_I2C_SCL_GPIO_CLK and sEE_I2C_SDA_GPIO_CLK Periph clock enable */
;;;771      RCC_AHBPeriphClockCmd(sEE_I2C_SCL_GPIO_CLK | sEE_I2C_SDA_GPIO_CLK, ENABLE);
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;772      
;;;773      /*!< sEE_I2C Periph clock enable */
;;;774      RCC_APB1PeriphClockCmd(sEE_I2C_CLK, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  0548              LSLS     r0,r1,#21
00000e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;775      
;;;776      /* Connect PXx to I2C_SCL*/
;;;777      GPIO_PinAFConfig(sEE_I2C_SCL_GPIO_PORT, sEE_I2C_SCL_SOURCE, sEE_I2C_SCL_AF);
000012  4c33              LDR      r4,|L16.224|
000014  2204              MOVS     r2,#4
000016  2108              MOVS     r1,#8
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       GPIO_PinAFConfig
;;;778      
;;;779      /* Connect PXx to I2C_SDA*/
;;;780      GPIO_PinAFConfig(sEE_I2C_SDA_GPIO_PORT, sEE_I2C_SDA_SOURCE, sEE_I2C_SDA_AF);
00001e  2204              MOVS     r2,#4
000020  2109              MOVS     r1,#9
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       GPIO_PinAFConfig
;;;781      
;;;782      /*!< GPIO configuration */  
;;;783      /*!< Configure sEE_I2C pins: SCL */
;;;784      GPIO_InitStructure.GPIO_Pin = sEE_I2C_SCL_PIN;
000028  15a0              ASRS     r0,r4,#22
;;;785      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
00002a  9001              STR      r0,[sp,#4]
00002c  2002              MOVS     r0,#2
00002e  f88d0008          STRB     r0,[sp,#8]
;;;786      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
000032  2003              MOVS     r0,#3
000034  f88d0009          STRB     r0,[sp,#9]
;;;787      GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000038  2601              MOVS     r6,#1
00003a  f88d600a          STRB     r6,[sp,#0xa]
;;;788      GPIO_Init(sEE_I2C_SCL_GPIO_PORT, &GPIO_InitStructure);
00003e  a901              ADD      r1,sp,#4
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       GPIO_Init
;;;789      
;;;790      /*!< Configure sEE_I2C pins: SDA */
;;;791      GPIO_InitStructure.GPIO_Pin = sEE_I2C_SDA_PIN;
000046  1560              ASRS     r0,r4,#21
;;;792      GPIO_Init(sEE_I2C_SDA_GPIO_PORT, &GPIO_InitStructure); 
000048  9001              STR      r0,[sp,#4]
00004a  a901              ADD      r1,sp,#4
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       GPIO_Init
;;;793      
;;;794      /* Configure and enable I2C DMA TX Channel interrupt */
;;;795      NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_TX_IRQn;
000052  2510              MOVS     r5,#0x10
000054  f88d5000          STRB     r5,[sp,#0]
;;;796      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
000058  2400              MOVS     r4,#0
00005a  f88d4001          STRB     r4,[sp,#1]
;;;797      NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
00005e  f88d4002          STRB     r4,[sp,#2]
;;;798      NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000062  f88d6003          STRB     r6,[sp,#3]
;;;799      NVIC_Init(&NVIC_InitStructure);
000066  4668              MOV      r0,sp
000068  f7fffffe          BL       NVIC_Init
;;;800      
;;;801      /* Configure and enable I2C DMA RX Channel interrupt */
;;;802      NVIC_InitStructure.NVIC_IRQChannel = sEE_I2C_DMA_RX_IRQn;
00006c  2011              MOVS     r0,#0x11
00006e  f88d0000          STRB     r0,[sp,#0]
;;;803      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = sEE_I2C_DMA_PREPRIO;
000072  f88d4001          STRB     r4,[sp,#1]
;;;804      NVIC_InitStructure.NVIC_IRQChannelSubPriority = sEE_I2C_DMA_SUBPRIO;
000076  f88d4002          STRB     r4,[sp,#2]
;;;805      NVIC_Init(&NVIC_InitStructure);  
00007a  4668              MOV      r0,sp
00007c  f7fffffe          BL       NVIC_Init
;;;806      
;;;807      /*!< I2C DMA TX and RX channels configuration */
;;;808      /* Enable the DMA clock */
;;;809      RCC_AHBPeriphClockCmd(sEE_I2C_DMA_CLK, ENABLE);
000080  2101              MOVS     r1,#1
000082  0608              LSLS     r0,r1,#24
000084  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;810      
;;;811      /* I2C TX DMA Channel configuration */
;;;812      DMA_DeInit(sEE_I2C_DMA_CHANNEL_TX);
000088  4e16              LDR      r6,|L16.228|
00008a  4630              MOV      r0,r6
00008c  f7fffffe          BL       DMA_DeInit
;;;813      sEEDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)sEE_I2C_DR_Address;
000090  4916              LDR      r1,|L16.236|
000092  4815              LDR      r0,|L16.232|
000094  e8810031          STM      r1,{r0,r4,r5}
;;;814      sEEDMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)0;   /* This parameter will be configured durig communication */
;;;815      sEEDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;    /* This parameter will be configured durig communication */
;;;816      sEEDMA_InitStructure.DMA_BufferSize = 0xFFFF;            /* This parameter will be configured durig communication */
000098  f64f70ff          MOV      r0,#0xffff
00009c  e9c10403          STRD     r0,r4,[r1,#0xc]
;;;817      sEEDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
;;;818      sEEDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
0000a0  2080              MOVS     r0,#0x80
0000a2  e9c10405          STRD     r0,r4,[r1,#0x14]
;;;819      sEEDMA_InitStructure.DMA_PeripheralDataSize = DMA_MemoryDataSize_Byte;
;;;820      sEEDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
;;;821      sEEDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
;;;822      sEEDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
0000a6  f44f5040          MOV      r0,#0x3000
0000aa  61cc              STR      r4,[r1,#0x1c]  ; sEEDMA_InitStructure
0000ac  e9c14008          STRD     r4,r0,[r1,#0x20]
;;;823      sEEDMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
;;;824      DMA_Init(sEE_I2C_DMA_CHANNEL_TX, &sEEDMA_InitStructure);  
0000b0  628c              STR      r4,[r1,#0x28]  ; sEEDMA_InitStructure
0000b2  4630              MOV      r0,r6
0000b4  f7fffffe          BL       DMA_Init
;;;825      
;;;826      /* I2C RX DMA Channel configuration */
;;;827      DMA_DeInit(sEE_I2C_DMA_CHANNEL_RX);
0000b8  4c0a              LDR      r4,|L16.228|
0000ba  3414              ADDS     r4,r4,#0x14
0000bc  4620              MOV      r0,r4
0000be  f7fffffe          BL       DMA_DeInit
;;;828      DMA_Init(sEE_I2C_DMA_CHANNEL_RX, &sEEDMA_InitStructure);  
0000c2  490a              LDR      r1,|L16.236|
0000c4  4620              MOV      r0,r4
0000c6  f7fffffe          BL       DMA_Init
;;;829      
;;;830      /* Enable the DMA Channels Interrupts */
;;;831      DMA_ITConfig(sEE_I2C_DMA_CHANNEL_TX, DMA_IT_TC, ENABLE);
0000ca  2201              MOVS     r2,#1
0000cc  2102              MOVS     r1,#2
0000ce  4630              MOV      r0,r6
0000d0  f7fffffe          BL       DMA_ITConfig
;;;832      DMA_ITConfig(sEE_I2C_DMA_CHANNEL_RX, DMA_IT_TC, ENABLE);    
0000d4  2201              MOVS     r2,#1
0000d6  2102              MOVS     r1,#2
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       DMA_ITConfig
;;;833    }
0000de  bdfe              POP      {r1-r7,pc}
;;;834    
                          ENDP

                  |L16.224|
                          DCD      0x40020400
                  |L16.228|
                          DCD      0x4002606c
                  |L16.232|
                          DCD      0x40005410
                  |L16.236|
                          DCD      ||.bss||

                          AREA ||i.sEE_SPI_LowLevel_DeInit||, CODE, READONLY, ALIGN=2

                  sEE_SPI_LowLevel_DeInit PROC
;;;614      */
;;;615    void sEE_SPI_LowLevel_DeInit(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;616    {
;;;617      GPIO_InitTypeDef  GPIO_InitStructure;
;;;618      
;;;619      SPI_Cmd(sEE_SPI, DISABLE); /*!< sEE_SPI disable */
000002  4c15              LDR      r4,|L17.88|
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       SPI_Cmd
;;;620      SPI_I2S_DeInit(sEE_SPI);   /*!< DeInitializes the sEE_SPI */
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       SPI_I2S_DeInit
;;;621      
;;;622      /*!< sEE_SPI Periph clock disable */
;;;623      RCC_APB1PeriphClockCmd(sEE_SPI_CLK, DISABLE); 
000012  2100              MOVS     r1,#0
000014  14a0              ASRS     r0,r4,#18
000016  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;624    
;;;625      /*!< Configure sEE_SPI pins: SCK */
;;;626      GPIO_InitStructure.GPIO_Pin = sEE_SPI_SCK_PIN;
;;;627      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00001a  2000              MOVS     r0,#0
00001c  f88d0004          STRB     r0,[sp,#4]
000020  2420              MOVS     r4,#0x20              ;626
;;;628      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000022  f88d0007          STRB     r0,[sp,#7]
000026  9400              STR      r4,[sp,#0]            ;627
;;;629      GPIO_Init(sEE_SPI_SCK_GPIO_PORT, &GPIO_InitStructure);
000028  4669              MOV      r1,sp
00002a  480c              LDR      r0,|L17.92|
00002c  f7fffffe          BL       GPIO_Init
;;;630    
;;;631      /*!< Configure sEE pins: MISO */
;;;632      GPIO_InitStructure.GPIO_Pin = sEE_SPI_MISO_PIN;
000030  0260              LSLS     r0,r4,#9
;;;633      GPIO_Init(sEE_SPI_MISO_GPIO_PORT, &GPIO_InitStructure);
000032  4d0b              LDR      r5,|L17.96|
000034  9000              STR      r0,[sp,#0]
000036  4669              MOV      r1,sp
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       GPIO_Init
;;;634    
;;;635      /*!< Configure sEE pins: MOSI */
;;;636      GPIO_InitStructure.GPIO_Pin = sEE_SPI_MOSI_PIN;
00003e  02a0              LSLS     r0,r4,#10
;;;637      GPIO_Init(sEE_SPI_MOSI_GPIO_PORT, &GPIO_InitStructure);
000040  9000              STR      r0,[sp,#0]
000042  4669              MOV      r1,sp
000044  4628              MOV      r0,r5
000046  f7fffffe          BL       GPIO_Init
;;;638    
;;;639      /*!< Configure sEE_CS_PIN pin: sEE Card CS pin */
;;;640      GPIO_InitStructure.GPIO_Pin = sEE_SPI_CS_PIN;
;;;641      GPIO_Init(sEE_SPI_CS_GPIO_PORT, &GPIO_InitStructure);
00004a  4669              MOV      r1,sp
00004c  4805              LDR      r0,|L17.100|
00004e  9400              STR      r4,[sp,#0]
000050  f7fffffe          BL       GPIO_Init
;;;642    }
000054  bd7c              POP      {r2-r6,pc}
;;;643    
                          ENDP

000056  0000              DCW      0x0000
                  |L17.88|
                          DCD      0x40013000
                  |L17.92|
                          DCD      0x40020000
                  |L17.96|
                          DCD      0x40021000
                  |L17.100|
                          DCD      0x40020800

                          AREA ||i.sEE_SPI_LowLevel_Init||, CODE, READONLY, ALIGN=2

                  sEE_SPI_LowLevel_Init PROC
;;;648      */
;;;649    void sEE_SPI_LowLevel_Init(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;650    {
000004  b087              SUB      sp,sp,#0x1c
;;;651      GPIO_InitTypeDef  GPIO_InitStructure;
;;;652      SPI_InitTypeDef   SPI_InitStructure;
;;;653    
;;;654      /*!< sEE_CS_GPIO, sEE_MOSI_GPIO, sEE_MISO_GPIO and sEE_SCK_GPIO 
;;;655           Periph clock enable */
;;;656      RCC_AHBPeriphClockCmd(sEE_SPI_CS_GPIO_CLK | sEE_SPI_MOSI_GPIO_CLK | sEE_SPI_MISO_GPIO_CLK |
000006  2101              MOVS     r1,#1
000008  2015              MOVS     r0,#0x15
00000a  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;657                            sEE_SPI_SCK_GPIO_CLK , ENABLE);
;;;658    
;;;659      /*!< sEE Periph clock enable */
;;;660      RCC_APB2PeriphClockCmd(sEE_SPI_CLK, ENABLE); 
00000e  2101              MOVS     r1,#1
000010  0308              LSLS     r0,r1,#12
000012  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;661    
;;;662      /*!< Configure sEE pins: SCK */
;;;663      GPIO_InitStructure.GPIO_Pin = sEE_SPI_SCK_PIN;
;;;664      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000016  2002              MOVS     r0,#2
000018  f88d0004          STRB     r0,[sp,#4]
;;;665      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
00001c  2703              MOVS     r7,#3
00001e  f88d7005          STRB     r7,[sp,#5]
;;;666      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000022  2400              MOVS     r4,#0
;;;667      GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
;;;668      GPIO_Init(sEE_SPI_SCK_GPIO_PORT, &GPIO_InitStructure);
000024  f8df90b0          LDR      r9,|L18.216|
000028  2620              MOVS     r6,#0x20              ;663
00002a  f88d4006          STRB     r4,[sp,#6]            ;666
00002e  2501              MOVS     r5,#1                 ;667
000030  9600              STR      r6,[sp,#0]            ;664
000032  f88d5007          STRB     r5,[sp,#7]            ;667
000036  4669              MOV      r1,sp
000038  4648              MOV      r0,r9
00003a  f7fffffe          BL       GPIO_Init
;;;669    
;;;670      /*!< Configure sEE_SPI pins: MISO */
;;;671      GPIO_InitStructure.GPIO_Pin = sEE_SPI_MISO_PIN;
00003e  03a8              LSLS     r0,r5,#14
;;;672      GPIO_Init(sEE_SPI_MISO_GPIO_PORT, &GPIO_InitStructure);
000040  f8df8098          LDR      r8,|L18.220|
000044  9000              STR      r0,[sp,#0]
000046  4669              MOV      r1,sp
000048  4640              MOV      r0,r8
00004a  f7fffffe          BL       GPIO_Init
;;;673    
;;;674      /*!< Configure sEE_SPI pins: MOSI */
;;;675      GPIO_InitStructure.GPIO_Pin = sEE_SPI_MOSI_PIN;
00004e  03e8              LSLS     r0,r5,#15
;;;676      GPIO_Init(sEE_SPI_MOSI_GPIO_PORT, &GPIO_InitStructure);
000050  9000              STR      r0,[sp,#0]
000052  4669              MOV      r1,sp
000054  4640              MOV      r0,r8
000056  f7fffffe          BL       GPIO_Init
;;;677    
;;;678      /*!< Configure sEE_SPI_CS_PIN pin: sEE_SPI Card CS pin */
;;;679      GPIO_InitStructure.GPIO_Pin = sEE_SPI_CS_PIN;
;;;680      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00005a  f88d5004          STRB     r5,[sp,#4]
;;;681      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00005e  f88d4006          STRB     r4,[sp,#6]
;;;682      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000062  f88d5007          STRB     r5,[sp,#7]
000066  9600              STR      r6,[sp,#0]            ;680
;;;683      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
000068  f88d7005          STRB     r7,[sp,#5]
;;;684      GPIO_Init(sEE_SPI_CS_GPIO_PORT, &GPIO_InitStructure);
00006c  4669              MOV      r1,sp
00006e  481c              LDR      r0,|L18.224|
000070  f7fffffe          BL       GPIO_Init
;;;685    
;;;686      /* Connect PXx to sEE_SPI_SCK */
;;;687      GPIO_PinAFConfig(sEE_SPI_SCK_GPIO_PORT, sEE_SPI_SCK_SOURCE, sEE_SPI_SCK_AF);
000074  2205              MOVS     r2,#5
000076  4611              MOV      r1,r2
000078  4648              MOV      r0,r9
00007a  f7fffffe          BL       GPIO_PinAFConfig
;;;688    
;;;689      /* Connect PXx to sEE_SPI_MISO */
;;;690      GPIO_PinAFConfig(sEE_SPI_MISO_GPIO_PORT, sEE_SPI_MISO_SOURCE, sEE_SPI_MISO_AF); 
00007e  2205              MOVS     r2,#5
000080  210e              MOVS     r1,#0xe
000082  4640              MOV      r0,r8
000084  f7fffffe          BL       GPIO_PinAFConfig
;;;691    
;;;692      /* Connect PXx to sEE_SPI_MOSI */
;;;693      GPIO_PinAFConfig(sEE_SPI_MOSI_GPIO_PORT, sEE_SPI_MOSI_SOURCE, sEE_SPI_MOSI_AF);  
000088  2205              MOVS     r2,#5
00008a  210f              MOVS     r1,#0xf
00008c  4640              MOV      r0,r8
00008e  f7fffffe          BL       GPIO_PinAFConfig
;;;694      
;;;695      /*!< sEE SPI Config */
;;;696      SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
000092  f8ad4008          STRH     r4,[sp,#8]
;;;697      SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
000096  f44f7082          MOV      r0,#0x104
00009a  f8ad000a          STRH     r0,[sp,#0xa]
;;;698      SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
;;;699      SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
;;;700      SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
00009e  f8ad4010          STRH     r4,[sp,#0x10]
0000a2  f8ad400c          STRH     r4,[sp,#0xc]          ;698
;;;701      SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
0000a6  0268              LSLS     r0,r5,#9
;;;702      SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
0000a8  f8ad4014          STRH     r4,[sp,#0x14]
0000ac  f8ad400e          STRH     r4,[sp,#0xe]          ;699
0000b0  f8ad0012          STRH     r0,[sp,#0x12]         ;701
;;;703      SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
0000b4  f8ad4016          STRH     r4,[sp,#0x16]
;;;704      SPI_InitStructure.SPI_CRCPolynomial = 7;
0000b8  2007              MOVS     r0,#7
;;;705      SPI_Init(sEE_SPI, &SPI_InitStructure);
0000ba  4c0a              LDR      r4,|L18.228|
0000bc  f8ad0018          STRH     r0,[sp,#0x18]         ;704
0000c0  a902              ADD      r1,sp,#8
0000c2  4620              MOV      r0,r4
0000c4  f7fffffe          BL       SPI_Init
;;;706    
;;;707      SPI_Cmd(sEE_SPI, ENABLE); /*!< sEE_SPI enable */
0000c8  2101              MOVS     r1,#1
0000ca  4620              MOV      r0,r4
0000cc  f7fffffe          BL       SPI_Cmd
;;;708    }
0000d0  b007              ADD      sp,sp,#0x1c
0000d2  e8bd83f0          POP      {r4-r9,pc}
;;;709    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L18.216|
                          DCD      0x40020000
                  |L18.220|
                          DCD      0x40021000
                  |L18.224|
                          DCD      0x40020800
                  |L18.228|
                          DCD      0x40013000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  sEEDMA_InitStructure
                          %        44

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  COM_TX_PIN_SOURCE
000000  09                DCB      0x09
                  COM_RX_PIN_SOURCE
000001  0a                DCB      0x0a
                  COM_TX_AF
000002  07                DCB      0x07
                  COM_RX_AF
000003  07                DCB      0x07
                  COM_TX_PIN
000004  0200              DCW      0x0200
                  COM_RX_PIN
000006  0400              DCW      0x0400
                  COM_USART_CLK
                          DCD      0x00004000
                  COM_TX_PORT_CLK
                          DCD      0x00000001
                  COM_RX_PORT_CLK
                          DCD      0x00000001
                  BUTTON_PORT_SOURCE
000014  00070707          DCB      0x00,0x07,0x07,0x07
000018  0707              DCB      0x07,0x07
                  BUTTON_PIN_SOURCE
00001a  0007              DCB      0x00,0x07
00001c  060b080d          DCB      0x06,0x0b,0x08,0x0d
                  BUTTON_IRQn
000020  06171728          DCB      0x06,0x17,0x17,0x28
000024  1728              DCB      0x17,0x28
                  GPIO_PIN
000026  0008              DCW      0x0008
000028  00804000          DCW      0x0080,0x4000
00002c  8000              DCW      0x8000
00002e  0000              DCB      0x00,0x00
                  GPIO_CLK
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000080
                          DCD      0x00000080
                  BUTTON_PIN
000040  00010080          DCW      0x0001,0x0080
000044  00400800          DCW      0x0040,0x0800
000048  01002000          DCW      0x0100,0x2000
                  BUTTON_CLK
                          DCD      0x00000001
                          DCD      0x00000080
                          DCD      0x00000080
                          DCD      0x00000080
                          DCD      0x00000080
                          DCD      0x00000080
                  BUTTON_EXTI_LINE
000064  00010080          DCW      0x0001,0x0080
000068  00400800          DCW      0x0040,0x0800
00006c  01002000          DCW      0x0100,0x2000

                          AREA ||.data||, DATA, ALIGN=2

                  COM_USART
                          DCD      0x40013800
                  COM_TX_PORT
                          DCD      0x40020000
                  COM_RX_PORT
                          DCD      0x40020000
                  GPIO_PORT
                          DCD      0x40020c00
                          DCD      0x40020c00
                          DCD      0x40021c00
                          DCD      0x40021c00
                  BUTTON_PORT
                          DCD      0x40020000
                          DCD      0x40021c00
                          DCD      0x40021c00
                          DCD      0x40021c00
                          DCD      0x40021c00
                          DCD      0x40021c00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Utilities\\STM32_EVAL\\STM32L152D_EVAL\\stm32l152d_eval.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_stm32l152d_eval_c_c84236cb____REV16|
#line 129 "C:\\Keil\\ARM\\PACK\\ARM\\CMSIS\\4.1.1\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_stm32l152d_eval_c_c84236cb____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_stm32l152d_eval_c_c84236cb____REVSH|
#line 144
|__asm___17_stm32l152d_eval_c_c84236cb____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
