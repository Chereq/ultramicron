; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152d-eval\main.o --asm_dir=.\STM32L152D-EVAL\ --list_dir=.\STM32L152D-EVAL\ --depend=.\stm32l152d-eval\main.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152D_EVAL -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32L1xx -D__MICROLIB -DSTM32L1XX_HD -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_HD -DUSE_STM32L152D_EVAL ..\src\main.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;49     *******************************************************************************/
;;;50     int main(void)
000000  f44f5140          MOV      r1,#0x3000
;;;51     {  NVIC_SetVectorTable(NVIC_VectTab_FLASH,0x3000);
000004  f04f6000          MOV      r0,#0x8000000
000008  f7fffffe          BL       NVIC_SetVectorTable
;;;52       Set_System();
00000c  f7fffffe          BL       Set_System
;;;53       Set_USBClock();
000010  f7fffffe          BL       Set_USBClock
;;;54       USB_Interrupts_Config();
000014  f7fffffe          BL       USB_Interrupts_Config
;;;55       USB_Init();
000018  f7fffffe          BL       USB_Init
                  |L1.28|
;;;56       
;;;57       while (1)
00001c  e7fe              B        |L1.28|
;;;58       {
;;;59       }
;;;60     }
;;;61     #ifdef USE_FULL_ASSERT
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 129 "C:\\Keil\\ARM\\PACK\\ARM\\CMSIS\\4.1.1\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 144
|__asm___6_main_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
